{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\fridayLivekit\\\\client\\\\src\\\\LivekitVoiceRoom.js\",\n  _s = $RefreshSig$();\n// client/src/LivekitVoiceRoom.js\nimport React, { useEffect, useRef } from \"react\";\nimport { Room, RoomEvent, createLocalAudioTrack } from \"livekit-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LivekitVoiceRoom = ({\n  token,\n  url\n}) => {\n  _s();\n  const roomRef = useRef(new Room());\n  const audioEl = useRef(null);\n  useEffect(() => {\n    const currentRoom = roomRef.current;\n    const connectToRoom = async () => {\n      try {\n        const audioTrack = await createLocalAudioTrack();\n        await currentRoom.connect(url, token, {\n          audio: true,\n          video: false\n        });\n        currentRoom.localParticipant.publishTrack(audioTrack);\n        currentRoom.on(RoomEvent.TrackSubscribed, (track, publication, participant) => {\n          if (track.kind === \"audio\") {\n            track.attach(audioEl.current);\n          }\n        });\n      } catch (error) {\n        console.error(\"Failed to connect to LiveKit room:\", error);\n      }\n    };\n    connectToRoom();\n    return () => {\n      currentRoom.disconnect();\n    };\n  }, [token, url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD0A Talking to Supriya (AI Agent)...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioEl,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(LivekitVoiceRoom, \"1+x60g92tJKgce8bktCx8INQAuc=\");\n_c = LivekitVoiceRoom;\nexport default LivekitVoiceRoom;\nvar _c;\n$RefreshReg$(_c, \"LivekitVoiceRoom\");","map":{"version":3,"names":["React","useEffect","useRef","Room","RoomEvent","createLocalAudioTrack","jsxDEV","_jsxDEV","LivekitVoiceRoom","token","url","_s","roomRef","audioEl","currentRoom","current","connectToRoom","audioTrack","connect","audio","video","localParticipant","publishTrack","on","TrackSubscribed","track","publication","participant","kind","attach","error","console","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/fridayLivekit/client/src/LivekitVoiceRoom.js"],"sourcesContent":["// client/src/LivekitVoiceRoom.js\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport {\r\n    Room,\r\n    RoomEvent,\r\n    createLocalAudioTrack,\r\n} from \"livekit-client\";\r\n\r\nconst LivekitVoiceRoom = ({ token, url }) => {\r\n    const roomRef = useRef(new Room());\r\n    const audioEl = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const currentRoom = roomRef.current;\r\n\r\n        const connectToRoom = async () => {\r\n            try {\r\n                const audioTrack = await createLocalAudioTrack();\r\n\r\n                await currentRoom.connect(url, token, {\r\n                    audio: true,\r\n                    video: false,\r\n                });\r\n\r\n                currentRoom.localParticipant.publishTrack(audioTrack);\r\n\r\n                currentRoom.on(RoomEvent.TrackSubscribed, (track, publication, participant) => {\r\n                    if (track.kind === \"audio\") {\r\n                        track.attach(audioEl.current);\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Failed to connect to LiveKit room:\", error);\r\n            }\r\n        };\r\n\r\n        connectToRoom();\r\n\r\n        return () => {\r\n            currentRoom.disconnect();\r\n        };\r\n    }, [token, url]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>ðŸ”Š Talking to Supriya (AI Agent)...</h2>\r\n            <audio ref={audioEl} autoPlay />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LivekitVoiceRoom;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SACIC,IAAI,EACJC,SAAS,EACTC,qBAAqB,QAClB,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAMC,OAAO,GAAGV,MAAM,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;EAClC,MAAMU,OAAO,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACZ,MAAMa,WAAW,GAAGF,OAAO,CAACG,OAAO;IAEnC,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,UAAU,GAAG,MAAMZ,qBAAqB,CAAC,CAAC;QAEhD,MAAMS,WAAW,CAACI,OAAO,CAACR,GAAG,EAAED,KAAK,EAAE;UAClCU,KAAK,EAAE,IAAI;UACXC,KAAK,EAAE;QACX,CAAC,CAAC;QAEFN,WAAW,CAACO,gBAAgB,CAACC,YAAY,CAACL,UAAU,CAAC;QAErDH,WAAW,CAACS,EAAE,CAACnB,SAAS,CAACoB,eAAe,EAAE,CAACC,KAAK,EAAEC,WAAW,EAAEC,WAAW,KAAK;UAC3E,IAAIF,KAAK,CAACG,IAAI,KAAK,OAAO,EAAE;YACxBH,KAAK,CAACI,MAAM,CAAChB,OAAO,CAACE,OAAO,CAAC;UACjC;QACJ,CAAC,CAAC;MACN,CAAC,CAAC,OAAOe,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC9D;IACJ,CAAC;IAEDd,aAAa,CAAC,CAAC;IAEf,OAAO,MAAM;MACTF,WAAW,CAACkB,UAAU,CAAC,CAAC;IAC5B,CAAC;EACL,CAAC,EAAE,CAACvB,KAAK,EAAEC,GAAG,CAAC,CAAC;EAEhB,oBACIH,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EAAI;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5C9B,OAAA;MAAO+B,GAAG,EAAEzB,OAAQ;MAAC0B,QAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAzCIH,gBAAgB;AAAAgC,EAAA,GAAhBhC,gBAAgB;AA2CtB,eAAeA,gBAAgB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}